{"version":3,"file":"static/webpack/static\\development\\pages\\barbers.js.24d746dd5879b4963297.hot-update.js","sources":["webpack:///./pages/barbers.js"],"sourcesContent":["import Layout from \"../components/Layout\";\r\nimport $ from \"jquery\";\r\n\r\nconst barberInfo = [\r\n  {\r\n    name: \"José Rojas 'J. Sax'\",\r\n    description:\r\n      \"Han fann sin passion i historien om barberare genom tiderna, han kände då att han hittat sitt kall. Han har nu arbetat de senaste 12 åren som barberare och är lika inspirerad som sin första dag i yrket.\",\r\n    url: \"/static/imgs/barber21.jpg\"\r\n  },\r\n  {\r\n    name: \"Ghani Amor Chaoui\",\r\n    description:\r\n      \"Blev kär i barberandet sedan ung ålder, det är som en konst för mig. Jag har varit barberare i 28år.\",\r\n    url: \"/static/imgs/barber1.jpg\"\r\n  }\r\n];\r\n\r\nimport React, { Component } from \"react\";\r\n\r\nexport default class barbers extends Component {\r\n  state = {\r\n    users: {}\r\n  };\r\n\r\n  async componentDidMount() {\r\n    let tokenRequest = {\r\n      jsonrpc: \"2.0\",\r\n      method: \"getToken\",\r\n      params: [\r\n        \"stockholmbarber\",\r\n        \"d7502608fde2546f82521763aee405e88d6b8035fa7367224022dfbf4308070c\"\r\n      ],\r\n      id: 2\r\n    };\r\n\r\n    let { result: token } = await $.ajax({\r\n      url: \"https://user-api.simplybook.me/login\",\r\n      contentType: \"application/json\",\r\n      type: \"POST\",\r\n      processData: false,\r\n      dataType: \"json\",\r\n      cache: false,\r\n      data: JSON.stringify(tokenRequest),\r\n      headers: {},\r\n      async: true\r\n    });\r\n\r\n    let userRequest = {\r\n      jsonrpc: \"2.0\",\r\n      method: \"getUnitList\",\r\n      params: [],\r\n      id: 2\r\n    };\r\n\r\n    let { result: users } = await $.ajax({\r\n      url: \"https://user-api.simplybook.me/\",\r\n      contentType: \"application/json\",\r\n      type: \"POST\",\r\n      processData: false,\r\n      dataType: \"json\",\r\n      cache: false,\r\n      data: JSON.stringify(userRequest),\r\n      headers: {\r\n        \"X-Company-Login\": \"stockholmbarber\",\r\n        \"X-Token\": token\r\n      },\r\n      async: true\r\n    });\r\n\r\n    this.setState({ users });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Layout>\r\n        <div id=\"barbers\">\r\n          <section>\r\n            <h1>Våra barberare</h1>\r\n            <div className=\"container\">\r\n              <div className=\"barber-container\">\r\n                {this.state.users.map(barber => (\r\n                  <div className=\"barber\">\r\n                    <div\r\n                      className=\"img\"\r\n                      style={{\r\n                        backgroundImage: `url(https://stockholmbarber.simplybook.it/uploads/stockholmbarber/image_files/preview/7e7da5cbb81688b56ea1f612cb172340.jpg%22?fbclid=IwAR1W3JVjw3ThcCnKIFnI9CrhtFWHoWpjZmWsKmrFJEMaaaM8KzwSGenA2Sc`\r\n                      }}\r\n                    />\r\n                    <div className=\"name\">{barber.name}</div>\r\n                    <div className=\"description\">{barber.description}</div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          </section>\r\n        </div>\r\n        <style jsx>{`\r\n          #barbers {\r\n            min-height: 1000px;\r\n            position: relative;\r\n            background-image: url(/static/imgs/index-header.jpg);\r\n            background-position: center;\r\n            background-repeat: no-repeat;\r\n            background-size: cover;\r\n          }\r\n          section {\r\n            padding: 140px 0;\r\n          }\r\n\r\n          h1 {\r\n            color: #fff;\r\n            position: relative;\r\n            z-index: 3;\r\n          }\r\n\r\n          #barbers:before {\r\n            content: \"\";\r\n            position: absolute;\r\n            top: 0;\r\n            bottom: 0;\r\n            right: 0;\r\n            left: 0;\r\n            background: rgba(0, 0, 0, 0.6);\r\n            z-index: 2;\r\n          }\r\n\r\n          .container {\r\n            position: relative;\r\n            z-index: 3;\r\n            color: #fff;\r\n            width: 80%;\r\n            margin: 0 auto;\r\n          }\r\n\r\n          .barber-container {\r\n            padding-top: 40px;\r\n            display: flex;\r\n            justify-content: space-around;\r\n          }\r\n\r\n          .barber {\r\n            flex-basis: 100%;\r\n            max-width: 450px;\r\n          }\r\n\r\n          @media screen and (max-width: 1050px) {\r\n            .barber-container {\r\n              flex-direction: column;\r\n            }\r\n            .barber {\r\n              margin: 0 auto;\r\n              margin-top: 70px;\r\n            }\r\n\r\n            .barber:first-of-type {\r\n              margin-top: 0;\r\n            }\r\n          }\r\n\r\n          .img {\r\n            background-position: top;\r\n            background-repeat: no-repeat;\r\n            background-size: cover;\r\n            width: 220px;\r\n            height: 220px;\r\n            border-radius: 50%;\r\n            margin: 0 auto;\r\n            margin-bottom: 20px;\r\n          }\r\n\r\n          .name {\r\n            font-size: 40px;\r\n            font-weight: bold;\r\n            margin-bottom: 10px;\r\n          }\r\n\r\n          .description {\r\n            max-width: 400px;\r\n            margin: 0 auto;\r\n          }\r\n        `}</style>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;AAEA;AACA;AAEA;AAJA;AAOA;AACA;AAEA;AAJA;AAQA;AACA;AACA;;;;;;;;;;;;;;;;;;AACA;AACA;AADA;AACA;;;;;;;;;;;;;;;;AAIA;AACA;AACA;AACA;AAIA;AAPA;;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AACA;;;AADA;AAYA;AACA;AACA;AACA;AACA;AAJA;;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AAZA;AACA;;;AADA;AAeA;AAAA;AAAA;AACA;;;;;;;;;;;;;;;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AADA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AATA;AANA;AAAA;AAAA;AAAA;AA6GA;;;;AApKA;AACA;AADA;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}