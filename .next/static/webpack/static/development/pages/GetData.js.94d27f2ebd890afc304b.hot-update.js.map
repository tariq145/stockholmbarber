{"version":3,"file":"static/webpack/static\\development\\pages\\GetData.js.94d27f2ebd890afc304b.hot-update.js","sources":["webpack:///./pages/GetData.js"],"sourcesContent":["import React, { Component } from \"react\";\r\n\r\nimport jQuery from \"jquery\";\r\n\r\nexport default class GetData extends Component {\r\n  componentDidMount() {\r\n    jQuery(window);\r\n\r\n    /**\r\n     * JSON-RPC Client Exception class\r\n     *\r\n     * @param String code\r\n     * @param String message\r\n     */\r\n\r\n    var JSONRpcClientException = function(code, message) {\r\n      this.code = code;\r\n      this.message = message;\r\n    };\r\n    JSONRpcClientException.prototype = jQuery.extend(\r\n      JSONRpcClientException.prototype,\r\n      {\r\n        /**\r\n         * Magic method. COnvert object to string.\r\n         *\r\n         * @return String\r\n         */\r\n        toString: function() {\r\n          return \"[\" + this.code + \"] \" + this.message;\r\n        }\r\n      }\r\n    );\r\n\r\n    /**\r\n     * JSON-RPC Client\r\n     *\r\n     * @param Object options\r\n     */\r\n    var JSONRpcClient = function(options) {\r\n      this.setOptions(options);\r\n      this.init();\r\n    };\r\n    JSONRpcClient.prototype = jQuery.extend(JSONRpcClient.prototype, {\r\n      /**\r\n       * Default options\r\n       */\r\n      options: {\r\n        onerror: function() {},\r\n        onsuccess: function() {},\r\n        url: \"\",\r\n        headers: {}\r\n      },\r\n      current: 1,\r\n      onerror: null,\r\n      onsuccess: null,\r\n      onstart: null,\r\n\r\n      /**\r\n       * Init client\r\n       */\r\n      init: function() {\r\n        this.onerror = this.getParam(\"onerror\");\r\n        this.onsuccess = this.getParam(\"onsuccess\");\r\n\r\n        this.initMethods();\r\n      },\r\n\r\n      /**\r\n       * Init API methiods by url\r\n       */\r\n      initMethods: function() {\r\n        var instance = this;\r\n        // get all methods\r\n        jQuery.ajax(this.getParam(\"url\"), {\r\n          async: false,\r\n          success: function(data) {\r\n            if (data.methods) {\r\n              // create method\r\n              jQuery.each(data.methods, function(methodName, methodParams) {\r\n                var method = function() {\r\n                  var params = new Array();\r\n                  for (var i = 0; i < arguments.length; i++) {\r\n                    params.push(arguments[i]);\r\n                  }\r\n                  var id = instance.current++;\r\n                  var callback = params[params.length - 1];\r\n                  var request = {\r\n                    jsonrpc: \"2.0\",\r\n                    method: methodName,\r\n                    params: params,\r\n                    id: id\r\n                  };\r\n\r\n                  var async = false;\r\n                  if (jQuery.type(callback) == \"function\") {\r\n                    async = true;\r\n                    params.pop();\r\n                  }\r\n\r\n                  var res = null;\r\n                  // API request\r\n                  jQuery.ajax(instance.getParam(\"url\"), {\r\n                    contentType: \"application/json\",\r\n                    type: methodParams.transport,\r\n                    processData: false,\r\n                    dataType: \"json\",\r\n                    cache: false,\r\n                    data: JSON.stringify(request),\r\n                    headers: {\r\n                      ...instance.getParam(\"headers\")\r\n                    },\r\n                    async: async,\r\n                    success: function(result) {\r\n                      if (jQuery.type(result.error) == \"object\") {\r\n                        res = new JSONRpcClientException(\r\n                          result.error.code,\r\n                          result.error.message\r\n                        );\r\n                        instance.onerror(res);\r\n                      } else {\r\n                        res = result.result;\r\n                        if (jQuery.type(callback) == \"function\") {\r\n                          callback(res);\r\n                        }\r\n                      }\r\n                      instance.onsuccess(res, id, methodName);\r\n                    }\r\n                  });\r\n                  if (!async) {\r\n                    return res;\r\n                  }\r\n                };\r\n\r\n                instance[methodName] = method;\r\n              });\r\n            } else {\r\n              throw Exception(\"Methods could not be found\");\r\n            }\r\n          }\r\n        });\r\n      },\r\n\r\n      /**\r\n       * Set client options\r\n       *\r\n       * @param Object options\r\n       */\r\n      setOptions: function(options) {\r\n        this.options = jQuery.extend({}, this.options, options);\r\n      },\r\n\r\n      /**\r\n       * Get client param, if param is not available in this.options return defaultValue\r\n       *\r\n       * @param String key\r\n       * @param mixed defaultValue\r\n       * @return mixed\r\n       */\r\n      getParam: function(key, defaultValue) {\r\n        if (jQuery.type(this.options[key]) != \"undefined\") {\r\n          return this.options[key];\r\n        }\r\n        return defaultValue;\r\n      }\r\n    });\r\n\r\n    var client = new JSONRpcClient({\r\n      url: \"//user-api.simplybook.me\",\r\n      headers: {\r\n        \"X-Company-Login\": \"stockholmbarber\",\r\n        \"X-Token\":\r\n          \"d7502608fde2546f82521763aee405e88d6b8035fa7367224022dfbf4308070c\"\r\n      },\r\n      onerror: function(error) {\r\n        alert(error);\r\n      }\r\n    });\r\n\r\n    var services = client;\r\n\r\n    console.log(services);\r\n  }\r\n\r\n  render() {\r\n    return <div>THis is the data getter</div>;\r\n  }\r\n}\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAEA;AACA;AACA;;;;;;;;;;;;;AACA;AACA;AAEA;;;;;;;AAOA;AACA;AACA;AACA;AACA;AAAA;AAGA;;;;;AAKA;AACA;AACA;AARA;AAYA;;;;;;AAKA;AACA;AACA;AACA;AACA;AAAA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAOA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AAzBA;AACA;AA0BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAjEA;AAmEA;AACA;AACA;;;;;AAKA;AACA;AACA;AACA;AACA;;;;;;;AAOA;AACA;AACA;AACA;AACA;AAAA;AACA;AAzHA;AA4HA;AACA;AACA;AACA;AACA;AAFA;AAKA;AACA;AACA;AATA;AAYA;AAEA;AACA;;;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;AArLA;AACA;AADA;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}